{
  "version": 3,
  "sources": ["../lib/index.js", "../lib/core.js", "../lib/bindings.js"],
  "sourcesContent": ["export * from \"./core\"\nexport * as bindings from \"./bindings\"\n", "export function subscription() {\n    const subscribers = []\n    return {\n        $SUBSCRIPTION: true,\n        $subscribe(subscriber) {\n            subscribers.push(subscriber)\n        },\n        $publish(...data) {\n            subscribers.forEach(subscriber => subscriber(...data))\n        },\n    }\n}\n\nexport function makeSubscription(value) {\n    if (value.$SUBSCRIPTION) {\n        return value\n    }\n\n    if (typeof value === \"object\") {\n        if (Array.isArray(value)) {\n            return group(value)\n        } else {\n            return store(value)\n        }\n    }\n\n    return reactive(value)\n}\n\nexport function reactive(value) {\n    const { $subscribe, $publish } = subscription()\n    return {\n        $SUBSCRIPTION: true,\n        $subscribe,\n        $static() {\n            return value\n        },\n        $get() {\n            return value\n        },\n        $set(newValue) {\n            value = newValue\n            $publish(newValue)\n        }\n    }\n}\n\nexport function group(initial = []) {\n    const { $subscribe, $publish } = subscription()\n\n    const _group = []\n\n    for (let i = 0; i < initial.length; i++) {\n        const item = makeSubscription(initial[i])\n        _group.push(item)\n        item.$subscribe((newValue, keyParts) => {\n            $publish(newValue, keyParts ? `${i}.${keyParts}` : `${i}`)\n        })\n    }\n\n    _group.$SUBSCRIPTION = true\n    _group.$subscribe = $subscribe\n    _group.$static = function () {\n        return _group.map(item => item.$static())\n    }\n    _group.$mutate = function (fn) {\n        fn(_group)\n        for (let i = 0; i < _group.length; i++) {\n            if (!_group[i].$SUBSCRIPTION) {\n                _group[i] = makeSubscription(_group[i])\n            }\n        }\n        $publish(_group.$static())\n    }\n\n    return _group\n}\n\nexport function store(initial = {}) {\n    const { $subscribe, $publish } = subscription()\n\n    const _store = {}\n\n    for (const key in initial) {\n        _store[key] = makeSubscription(initial[key])\n        _store[key].$subscribe((newValue, keyParts) => {\n            $publish(newValue, keyParts ? `${key}.${keyParts}` : key)\n        })\n    }\n\n    _store.$SUBSCRIPTION = true\n    _store.$subscribe = $subscribe\n    _store.$static = function () {\n        const _static = {}\n        for (const key in _store) {\n            if (!key.startsWith(\"$\")) {\n                _static[key] = _store[key].$static()\n            }\n        }\n        return _static\n    }\n    _store.$set = function (key, value) {\n        _store[key] = makeSubscription(value)\n        _store[key].$subscribe((newValue, keyParts) => {\n            $publish(newValue, keyParts ? `${key}.${keyParts}` : key)\n        })\n        $publish(_store[key].$static(), key)\n    }\n\n    return _store\n}\n", "import { subscription, reactive, store } from \"./core\"\n\nexport function event(base, eventName) {\n    const _subscription = subscription()\n    base.addEventListener(eventName, () => _subscription.$publish())\n    return _subscription\n}\n\nexport function input(el, { transform = v => v } = {}) {\n    const _reactive = reactive(transform(el.value))\n\n    el.addEventListener(\"input\", () => _reactive.$set(transform(el.value)))\n\n    _reactive.$subscribe(value => {\n        if (el.value !== value) {\n            el.value = value\n        }\n    })\n\n    return _reactive\n}\n\nexport function form(el) {\n    const inputs = [...el.querySelectorAll(\"[name]\")]\n    const _store = store(Object.fromEntries(inputs.map(input => [input.name, input.value])))\n\n    inputs.forEach(inp => {\n        inp.addEventListener(\"input\", () => _store[inp.name].$set(inp.value))\n    })\n\n    _store.$subscribe((value, key) => {\n        const inpEl = inputs.find(inp => inp.name === key)\n        if (value !== inpEl.value) inpEl.value = value\n    })\n\n    return _store\n}\n"],
  "mappings": "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",
  "names": ["lib_exports", "__export", "bindings_exports", "group", "makeSubscription", "reactive", "store", "subscription", "subscription", "subscribers", "subscriber", "data", "makeSubscription", "value", "group", "store", "reactive", "$subscribe", "$publish", "newValue", "initial", "_group", "i", "item", "keyParts", "fn", "_store", "key", "_static", "bindings_exports", "__export", "event", "form", "input", "event", "base", "eventName", "_subscription", "subscription", "input", "el", "transform", "v", "_reactive", "reactive", "value", "form", "inputs", "_store", "store", "inp", "key", "inpEl"]
}
