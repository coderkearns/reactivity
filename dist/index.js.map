{
  "version": 3,
  "sources": ["../lib/subscription.js", "../lib/array.js", "../lib/object.js", "../lib/shared.js", "../lib/value.js"],
  "sourcesContent": ["export default class Subscription {\n    constructor() {\n        this._subscribers = []\n    }\n\n    subscribe(subscriber) {\n        this._subscribers.push(subscriber)\n    }\n\n    publish(...values) {\n        for (let subscriber of this._subscribers) {\n            subscriber(...values)\n        }\n    }\n}\n", "import Subscription from \"./subscription\";\nimport { makeSubscription } from \"./shared\";\n\nexport default class ReactiveArray extends Subscription {\n    constructor(initialArray) {\n        super()\n\n        this._internal = []\n\n        for (const item of initialArray) {\n            this._internal.push(makeSubscription(item))\n        }\n    }\n\n    static() {\n        return this._internal.map(item => item.static())\n    }\n\n    // TODO: implement all the stuff\n}\n", "import Subscription from \"./subscription\";\nimport { makeSubscription } from \"./shared\";\n\nexport default class ReactiveObject extends Subscription {\n    constructor(initialObject) {\n        super()\n\n        this._internal = {}\n\n        for (const key in initialObject) {\n            this._internal[key] = makeSubscription(initialObject[key])\n        }\n    }\n\n    static() {\n        const _static = {}\n        for (const key in this._internal) {\n            _static[key] = this._internal[key].static()\n        }\n    }\n\n    // TODO: implement all the stuff\n}\n", "import ReactiveValue from \"./value\"\nimport ReactiveArray from \"./array\"\nimport ReactiveObject from \"./object\"\n\nexport function makeSubscription(item) {\n    if (typeof item === \"object\") {\n        if (Array.isArray(item)) {\n            return new ReactiveArray(item)\n        } else {\n            return new ReactiveObject(item)\n        }\n    }\n\n    return new ReactiveValue(item)\n}\n", "import Subscription from \"./subscription\";\nimport { makeSubscription } from \"./shared\";\n\nexport default class ReactiveValue extends Subscription {\n    constructor(initialValue) {\n        super()\n        this._value = initialValue\n    }\n\n    get() {\n        return this._value\n    }\n\n    set(value) {\n        this._value = value\n        this.publish(this._value)\n    }\n\n    static() {\n        return this._value\n    }\n}\n"],
  "mappings": "MAAA,IAAqBA,EAArB,KAAkC,CAC9B,aAAc,CACV,KAAK,aAAe,CAAC,CACzB,CAEA,UAAUC,EAAY,CAClB,KAAK,aAAa,KAAKA,CAAU,CACrC,CAEA,WAAWC,EAAQ,CACf,QAASD,KAAc,KAAK,aACxBA,EAAW,GAAGC,CAAM,CAE5B,CACJ,ECXA,IAAqBC,EAArB,cAA2CC,CAAa,CACpD,YAAYC,EAAc,CACtB,MAAM,EAEN,KAAK,UAAY,CAAC,EAElB,QAAWC,KAAQD,EACf,KAAK,UAAU,KAAKE,EAAiBD,CAAI,CAAC,CAElD,CAEA,QAAS,CACL,OAAO,KAAK,UAAU,IAAIA,GAAQA,EAAK,OAAO,CAAC,CACnD,CAGJ,EChBA,IAAqBE,EAArB,cAA4CC,CAAa,CACrD,YAAYC,EAAe,CACvB,MAAM,EAEN,KAAK,UAAY,CAAC,EAElB,QAAWC,KAAOD,EACd,KAAK,UAAUC,CAAG,EAAIC,EAAiBF,EAAcC,CAAG,CAAC,CAEjE,CAEA,QAAS,CACL,IAAME,EAAU,CAAC,EACjB,QAAWF,KAAO,KAAK,UACnBE,EAAQF,CAAG,EAAI,KAAK,UAAUA,CAAG,EAAE,OAAO,CAElD,CAGJ,EClBO,SAASG,EAAiBC,EAAM,CACnC,OAAI,OAAOA,GAAS,SACZ,MAAM,QAAQA,CAAI,EACX,IAAIC,EAAcD,CAAI,EAEtB,IAAIE,EAAeF,CAAI,EAI/B,IAAIG,EAAcH,CAAI,CACjC,CCXA,IAAqBI,EAArB,cAA2CC,CAAa,CACpD,YAAYC,EAAc,CACtB,MAAM,EACN,KAAK,OAASA,CAClB,CAEA,KAAM,CACF,OAAO,KAAK,MAChB,CAEA,IAAIC,EAAO,CACP,KAAK,OAASA,EACd,KAAK,QAAQ,KAAK,MAAM,CAC5B,CAEA,QAAS,CACL,OAAO,KAAK,MAChB,CACJ",
  "names": ["Subscription", "subscriber", "values", "ReactiveArray", "Subscription", "initialArray", "item", "makeSubscription", "ReactiveObject", "Subscription", "initialObject", "key", "makeSubscription", "_static", "makeSubscription", "item", "ReactiveArray", "ReactiveObject", "ReactiveValue", "ReactiveValue", "Subscription", "initialValue", "value"]
}
